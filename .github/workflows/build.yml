name: Compile Binaries for Release
on: [push]

env:
  PKG_NAME: "MostlyWhat's Battlestation-development"
  PKG_VERSION: "0.0.0"

jobs:
  Windows:
    name: Compile Windows Binaries
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: actions/checkout
        uses: actions/checkout@v2

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      #Publishing to Release
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}

  MacOS:
    name: Compile MacOS Binaries
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            archive: zip

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: actions/checkout
        uses: actions/checkout@v2

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      #Publishing to Release
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}

  Linux:
    name: Compile Linux Binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: actions/checkout
        uses: actions/checkout@v2

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      #Publishing to Release
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
